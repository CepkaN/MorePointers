#include<iostream>
int main() {
	setlocale(LC_ALL, "Russian");
	int n,m;

	// Нааправление указателя на нейтральный адрес.
	/*int* pointer;
	// Первый способ.
	pointer = 0;
	if (pointer != 0)
		std::cout << pointer << '\n';
	else
		std::cout << "Указатель не инициализирован.\n";
	// *pointer = 15;  // Ошибка! Так как в нейтральной памяти нельзя записывать данные.

	// Второй способ.
	pointer = NULL;   // Нейтральный адрес.
	if(pointer)
		std::cout << pointer << '\n';
	else
		std::cout << "Указатель не инициализирован.\n";

	// Третий способ. ПРАВИЛЬНЫЙ.
	pointer = nullptr;
	if(pointer!=nullptr)
		std::cout << pointer << '\n';
	else
		std::cout << "Указатель не инициализирован.\n";*/

	// Модификации указателей.
	n = 15;
	// указатель на константу
	// может быть перенаправлен на другую область памяти. 
	// с его помощью нельзя поменять значение переменной, на которую он направлен.
	const int* pn1;
	pn1 = &n;
	//*pn1 = 1;  // нельзя менять переменную константы.
	std::cout << *pn1 << '\n';

	// Константный указатель или указатель-константа.
	// не может быть перенаправлен на другую область памяти и должен быть 
	// инициализирован сразу в момент создания, с его помощью можно менять
	// значение переменной, на которую он направлен.
	int* const pn2=&n;
	//pn2 = &m;  // Ошибка.
	*pn2 = 20;
	std::cout << n << '\n';

	// Константный указатель на константу.
	// не может быть перенаправлен на другую область памяти. Должен быть сразу инициализирован.
	// с его промощью нельзя менять значение переменной, на которую он направлен.
	const int* const pn3=&n;
	//pn3 = &m;  // Ошибка.
	//*pn3 = 4;  // Ошибка.
	std::cout << *pn3 << '\n';



	return 0;
}